@using System.Text.Json
@model IEnumerable<Zona_Geek.Models.ViewAgendamentoVM>
@{
    Layout = "/Views/Shared/_LayoutGerenciamento.cshtml";
}
<style>
    /* Estilo para o overlay (fundo escuro) */
    #overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5); /* Cor escura com transparência */
        z-index: 9998; /* Colocar abaixo do loader */
        display: none; /* Inicialmente escondido */
    }

    /* Estilo para o loader */
    #loader {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        padding: 15px 30px;
        background-color: rgba(0, 0, 0, 0.7); /* Fundo escuro para o loader */
        color: white;
        border-radius: 5px;
        font-size: 16px;
        z-index: 9999; /* Colocar acima do overlay */
        display: none; /* Inicialmente escondido */
    }
</style>
<body>
    <!-- Overlay e Loader -->
    <div id="overlay" style="display: none;"></div>
    <div id="loader" style="display: none;">
        <i class="fa fa-spinner fa-spin"></i> Carregando...
    </div>
    <section class="maneger-page-section">
        <div class="container page-maneger">

            <div class="add-user-button">
                <h1 class="section-title cliente-title-maneger">Agendamento de Usuario</h1>
                <br />
            </div>

            <div class="container">
                <div class="row">
                    <div class="col-md-6">
                        <div class="input-group mb-4">
                            <input id="filtro" type="text" class="form-control" placeholder="Pesquisar Produtos..." aria-label="Filtrar" aria-describedby="basic-addon2">
                        </div>
                    </div>
                    <div class="col-md-6 text-md-end">
                        <!-- Alteração para "text-md-end" para alinhar à direita apenas em telas médias e maiores -->
                        <a href="@Url.Action("CadastroAgendamento", "Agendamento")" class="btn btn-success btn-lg" style="background-color:#f0ffff  ; color: black;">
                            <i class="fa fa-plus"></i> Adicionar Agendamento
                        </a>
                    </div>

                </div>
            </div>

            <!-- Tabela com cabeçalho fixo -->
            <table id="TbAtendimentos" class="table" style="width: 100%; border-collapse: collapse; table-layout: fixed;">
                <thead style="background-color: chocolate; color: #EAE7DC;">
                    <tr>
                        <th style="border: 1px solid #ddd; padding: 8px; min-width: 50px; position: sticky; top: 0; background-color: #315689">#</th>
                        <th style="border: 1px solid #ddd; padding: 8px; min-width: 150px; position: sticky; top: 0; background-color: #315689;">Data/Hora de Atendimento</th>
                        <th style="border: 1px solid #ddd; padding: 8px; min-width: 150px; position: sticky; top: 0; background-color: #315689;">Data de Atendimento</th>
                        <th style="border: 1px solid #ddd; padding: 8px; min-width: 150px; position: sticky; top: 0; background-color: #315689;">Hora</th>
                        <th style="border: 1px solid #ddd; padding: 8px; min-width: 150px; position: sticky; top: 0; background-color: #315689;">Nome</th>
                        <th style="border: 1px solid #ddd; padding: 8px; min-width: 150px; position: sticky; top: 0; background-color: #315689;">E-mail</th>
                        <th style="border: 1px solid #ddd; padding: 8px; min-width: 150px; position: sticky; top: 0; background-color: #315689;">Telefone</th>
                        <th style="border: 1px solid #ddd; padding: 8px; min-width: 150px; position: sticky; top: 0; background-color: #315689;">Tipo de Serviço</th>
                        <th style="border: 1px solid #ddd; padding: 8px; min-width: 150px; position: sticky; top: 0; background-color: #315689;">Valor</th>
                        <th class="editar" style="border: 1px solid #ddd; padding: 8px; min-width: 80px; position: sticky; top: 0; background-color: #315689;">Editar</th>
                        <th class="excluir" style="border: 1px solid #ddd; padding: 8px; min-width: 80px; position: sticky; top: 0; background-color: #315689;">Excluir</th>
                    </tr>
                </thead>
            </table>
     
                 <!-- Corpo da tabela rolável -->
        <div style="max-height: 300px; overflow-y: auto; overflow-x: auto;">
            <table id="TbAgendamentoBody" class="table" style="width: 100%; border-collapse: collapse; table-layout: fixed;">
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        @foreach (var atendimento in Model)
                        {
                            <tr>
                                <td style="color: black; border: 1px solid black; padding: 8px; min-width: 50px">@atendimento.Id</td>
                                <td style="color: black; border: 1px solid black; padding: 8px; min-width: 150px">@atendimento.DtHorarioAgendamento</td>
                                <td style="color: black; border: 1px solid black; padding: 8px; min-width: 150px">@atendimento.DataAtendimento.ToString("dd/MM/yyyy")</td>
                                <td style="color:black; border: 1px solid black; padding: 8px; min-width: 150px">@atendimento.Horario.ToString("HH:mm")</td>
                                <td style="color: black; border: 1px solid black; padding: 8px; min-width: 150px">@atendimento.Nome</td>
                                <td style="color: black; border: 1px solid black; padding: 8px; min-width: 150px; word-wrap: break-word;">@atendimento.Email</td>
                                <td style="color: black; border: 1px solid black; padding: 8px; min-width: 150px">@atendimento.Telefone</td>
                                <td style="color:black; border: 1px solid black; padding: 8px; min-width: 150px">@atendimento.TipoServico</td>
                                <td style="color: black; border: 1px solid black; padding: 8px; min-width: 150px">@atendimento.Valor.ToString("C")</td>
                                <td style="border: 1px solid black;" class="text-center">
                                    <button class="btn btn-default" onclick="definirEdt('@atendimento.Id', '@atendimento.Nome', '@atendimento.Email', '@atendimento.Telefone', '@atendimento.DataAtendimento', '@atendimento.Horario', '@atendimento.TipoServico', '@atendimento.Valor');" data-bs-toggle="modal" data-bs-target="#EditarAgendamento">
                                        <i class="fa fa-edit"></i>
                                    </button>
                                </td>
                                <td style="border: 1px solid #ddd;" class="text-center">

                                    <button class="btn btn-default" onclick="definirExc('@atendimento.Id', '@atendimento.Nome', '@atendimento.Email', '@atendimento.Telefone', '@atendimento.DataAtendimento', '@atendimento.Horario', '@atendimento.TipoServico', '@atendimento.Valor');" data-bs-toggle="modal" data-bs-target="#ExcluirAgendamento">
                                        <i class="fa fa-trash text-danger"></i>
                                    </button>

                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="11" style="text-align: center; color: #EAE7DC; padding: 8px;">Nenhum atendimento encontrado.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Contador de Registros Centralizado com Fonte Maior -->
        <div style="text-align: center; margin-top: 10px;">
                <strong style="font-size: 18px">Total de Usuários: <span id="registroCount">0</span></strong>
            </div>

        <div class="modal fade" id="EditarAgendamento" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header" style="background-color: #86b2d2; color: white; border-color: #eea236;">
                        <h1 class="modal-title" id="exampleModalLabel">Editar Cliente</h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form>
                        <div class="mb-3">
                            <label for="nome">Nome</label>
                            <input type="text" id="EdtNome" class="form-control" readonly>

                        </div>
                        <div class="mb-3">
                            <label for="email">Email</label>
                            <input type="email" id="EdtEmail" class="form-control" readonly>

                        </div>
                        <div class="mb-3">
                            <label for="telefone">Telefone</label>
                            <input type="text" id="EdtTel" class="form-control" readonly>

                        </div>
                        <div class="mb-3">
                            <label for="telefone">Data do agendamento</label>
                            <input type="text" id="EdtData" class="form-control" readonly>

                        </div>

                        <div class="mb-3">
                            <label for="telefone">Horario</label>
                            <input type="text" id="EdtHorario" class="form-control" readonly>

                        </div>
                        
                        <div class="mb-3">
                            <label for="telefone">Valor</label>
                            <input type="text" id="EdtVal" class="form-control" readonly>
                        </div>                            
                         <div class="mb-3 row">
                             <div class="col-md-6">
                                 <div class="d-flex align-items-center">
                                     <label for="telefone" class="me-2">Tipo de Serviço</label>
                                     <label style="color:red">*</label>
                                 </div>
                                 @Html.DropDownList("EdtTipoServico",
                                          new SelectList(ViewBag.lstTipoServico, "Value", "Text", null),
                                          "Escolha o serviço",
                                          new { @class = "form-control", @style = "width:450px; background-color: #EAE7DC; color: #333;", required = "required" })
                             </div>                                
                         </div>
                        <div class="mb-3">
                            <div class="mb-3 d-flex align-items-center">
                                <input type="checkbox" id="chkR" value="08:00" class="form-check-input" style="margin-right: 10px;">
                                <label for="chkR" class="form-check-label ms-2">Reagendamento</label>
                            </div>
                        </div>
                        <div id="divCampos" style="border: 2px solid #000; padding: 10px; margin: 10px; display: none;">
                            <div class="mb-3 d-flex align-items-center">
                              <input id="data_a" type="date" class="form-control" style="width: 300px;" placeholder="Escolha a data do agendamento" oninput="consultarAgendamentoEdt()" min="{{ today }}">
                            </div>
                            <div class="mb-3 d-flex align-items-center">
                                @Html.DropDownList("DropHorario", ViewBag.lstHorarios, "Escolha o Horario", new { @class = "chosen-select form-control", @style = "width:420px;" })
                            </div>
                        </div>
                        <input type="hidden" id="EdtId" class="form-control" readonly>
                    </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
                        <button type="button" class="btn btn-primary" onclick="AlterarAgendamento()">Salvar</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="ExcluirAgendamento" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header" style="background-color: #86b2d2; color: white; border-color: black;">
                        <h1 class="modal-title" id="exampleModalLabel">Excluir Cliente</h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                                             <form>
                         <div class="mb-3">
                             <label for="nome">Nome</label>
                             <input type="text" id="ExcNome" class="form-control" readonly>

                         </div>
                         <div class="mb-3">
                             <label for="email">Email</label>
                             <input type="email" id="ExcEmail" class="form-control" readonly>

                         </div>
                         <div class="mb-3">
                             <label for="telefone">Telefone</label>
                             <input type="text" id="ExcTel" class="form-control" readonly>

                         </div>

                         <div class="mb-3">
                             <label for="telefone">Data do Agendamento</label>
                             <input type="text" id="ExcData" class="form-control" readonly>

                         </div>
                         <div class="mb-3">
                             <label for="telefone">Horario</label>
                             <input type="text" id="ExcHorario" class="form-control" readonly>

                         </div>
                         <div class="mb-3">
                             <label for="telefone">Tecnica</label>
                             <input type="text" id="ExcTecnica" class="form-control" readonly>

                         </div>
                         <div class="mb-3">
                             <label for="telefone">Valor</label>
                             <input type="text" id="ExcVal" class="form-control" readonly>

                         </div>                            

                         <input type="hidden" id="ExcId" class="form-control" readonly>

                     </form>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
                            <button type="button" onclick="ExcluirAgendamento()" class="btn btn-primary">Excluir</button>
                        </div>

                    </div>

                </div>
            </div>
        </div>

        <script src="~/lib/jquery/dist/jquery.min.js"></script>
        <script src="~/lib/swiper/swiper-bundle.min.js"></script>
        <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
        <script src="~/js/script.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script> <!-- Adiciona o SweetAlert2 -->
      
  <script>
         var listaOriginalHorario;
           
        $(document).ready(function () {
            $('input[type="checkbox"]').click(function () {
                var isChecked = $(this).prop("checked");
                var groupId = $(this).attr("data-group");

                if (isChecked) {
                    $('input[type="checkbox"][data-group="' + groupId + '"]').not($(this)).prop("checked", false);
                }
            });
        });

        function definirExc(id, Nome, Email, Telefone, Data, Horario, Tecnica, Val) {

            $('#ExcId').val(id);
            $('#ExcNome').val(Nome);
            $('#ExcEmail').val(Email);
            $('#ExcTel').val(Telefone)
            $('#ExcData').val(Data)
            $('#ExcHorario').val(Horario)
            $('#ExcTecnica').val(Tecnica)
            $('#ExcVal').val(Val)

        }

        function definirEdt(id, Nome, Email, Telefone, Data, Horario, Tecnica, Val, Conf) {

            $('#EdtId').val(id);
            $('#EdtNome').val(Nome);
            $('#EdtEmail').val(Email);
            $('#EdtTel').val(Telefone);
            $('#EdtData').val(Data);
            $('#EdtHorario').val(Horario);
            $('#EdtVal').val(Val);

            $('#EdtTipoServico option').each(function () {
                if ($(this).text() === Tecnica) {
                    $(this).prop('selected', true);
                }
            });
        }

        $(document).ready(function () {
            $('#EditarAgendamento').on('show.bs.modal', function () {
                $('#chkR').prop('checked', false);
                $('#divCampos').hide();
            });
        });

        $(document).ready(function () {

            listaOriginalHorario = @Html.Raw(JsonSerializer.Serialize(ViewBag.lstHorarios));
            document.getElementById('divCampos').style.display = 'none';

            // Adiciona o ouvinte de evento ao checkbox
            document.getElementById('chkR').addEventListener('change', function () {
                var display = this.checked ? 'block' : 'none';
                document.getElementById('divCampos').style.display = display;
            });
        });

        $(document).ready(function () {
            // Função para atualizar o contador de registros visíveis
            function atualizarContador() {
                var visibleRows = $('#TbAgendamentoBody tbody tr:visible').length; // Conta as linhas visíveis
                $('#registroCount').text(visibleRows); // Atualiza o contador
            }

            // Quando o usuário digitar no campo de filtro
            $('#filtro').on('keyup', function () {
                var value = $(this).val().toLowerCase(); // Pega o valor do campo de filtro e converte para minúsculas

                // Filtra as linhas do corpo da tabela
                $('#TbAgendamentoBody tbody tr').each(function () {
                    // Verifica se qualquer célula na linha contém o valor digitado no filtro
                    var rowText = $(this).text().toLowerCase();
                    // Exibe ou oculta a linha, dependendo de conter o valor
                    $(this).toggle(rowText.indexOf(value) > -1);
                });

                // Atualiza o contador após filtrar as linhas
                atualizarContador();
            });

            // Inicializa o contador de registros ao carregar a página
            atualizarContador();
        });

        function atualizarDropDownHorario(lista) {

            $("#DropHorario").empty();
            $.each(lista, function (index, item) {
                $("#DropHorario").append($("<option></option>")
                    .attr("value", item.Value)
                    .text(item.Text));
            });
        }
          
        function consultarAgendamentoEdt() {

            var data = $("#data_a").val();

            // Resetar o DropDownList para a lista original
            if (listaOriginalHorario) {
                atualizarDropDownHorario(listaOriginalHorario);
            }

            $.ajax({
                type: "GET",
                url: "/Agendamento/ConsultarAgendamento",
                data: { data: data },
                success: function (response) {
                    response.forEach(function (item) {
                        switch (item.horario) {
                            case "08:00:00":
                                $("#DropHorario option[value='8']").remove();
                                break;
                            case "10:00:00":
                                $("#DropHorario option[value='10']").remove();
                                break;
                            case "13:00:00":
                                $("#DropHorario option[value='13']").remove();
                                break;
                            case "15:00:00":
                                $("#DropHorario option[value='15']").remove();
                                break;
                            case "17:00:00":
                                $("#DropHorario option[value='17']").remove();
                                break;
                            case "19:00:00":
                                $("#DropHorario option[value='19']").remove();
                                break;
                            default:
                                break;
                        }
                    });
                },
                error: function (error) {
                    // Manipule os erros aqui
                    console.error("Erro na requisição AJAX:", error);
                }
            });
        }
        
        function obterDataHoraFormatada() {
            // Obtém a data e hora atuais
            var dataHoraAtual = new Date();

            // Formata a data e hora para o formato desejado (por exemplo, "yyyy-MM-dd HH:mm:ss.fff")
            var dataHoraFormatada = dataHoraAtual.getFullYear() + "-" +
                ("0" + (dataHoraAtual.getMonth() + 1)).slice(-2) + "-" +
                ("0" + dataHoraAtual.getDate()).slice(-2) + " " +
                ("0" + dataHoraAtual.getHours()).slice(-2) + ":" +
                ("0" + dataHoraAtual.getMinutes()).slice(-2) + ":" +
                ("0" + dataHoraAtual.getSeconds()).slice(-2) + "." +
                ("00" + dataHoraAtual.getMilliseconds()).slice(-3);

            // Retorna a data e hora formatada
            return dataHoraFormatada;
        }

                function AlterarAgendamento() {
                    var id = $("#EdtId").val();
                    var servico = $('#EdtTipoServico option:selected').val();
                    var data;
                    var horario;

                    // Correct condition: check if servico is 0
                    if (servico == 0) {
                        alert("Por favor, preencha o campo Tecnica.");
                        return;
                    }

                    if ($('#chkR').prop('checked')) {
                        data = $("#data_a").val();
                        horario = $('#DropHorario option:selected').text();

                        if (!data) {
                            alert("Por favor, preencha o campo data.");
                            return;
                        }
                        if (!horario) {
                            alert("Por favor, preencha o campo horário.");
                            return;
                        }
                    } else {
                        data = null;
                        horario = "";
                    }

                    // Show the overlay and loader
                    $("#overlay").show();
                    $("#loader").show();

                    var dados = {
                        id: id,
                        data: data,
                        servico: servico,
                        horario: horario
                    };

                    console.log(dados);

                    $.ajax({
                        url: '/Agendamento/AlterarAgendamento',
                        type: "POST",
                        dataType: "json",
                        data: dados,
                        success: function (response) {
                            // Hide the overlay and loader after the response
                            $("#overlay").hide();

                            if (response.success) {
                                Swal.fire({
                                    position: "top-end",
                                    icon: 'success',
                                    title: 'Sucesso',
                                    text: 'Agendamento alterado com sucesso!',
                                    confirmButtonText: 'OK',
                                    width: '400px',
                                    padding: '20px',
                                    customClass: {
                                        popup: 'custom-popup'
                                    }
                                }).then(function () {
                                    $('#InserirAgendamento').modal('hide');
                                    location.reload();
                                });
                            } else {
                                Swal.fire({
                                    position: "top-end",
                                    icon: 'error',
                                    title: 'Erro',
                                    text: response.message,
                                    confirmButtonText: 'OK',
                                    width: '400px',
                                    padding: '20px',
                                    customClass: {
                                        popup: 'custom-popup'
                                    }
                                });
                            }
                        },
                        error: function (xhr, textStatus, errorThrown) {
                            Swal.fire({
                                position: "top-end",
                                icon: 'error',
                                title: 'Erro',
                                text: 'Erro ao realizar a requisição.',
                                confirmButtonText: 'OK',
                                width: '400px',
                                padding: '20px',
                                customClass: {
                                    popup: 'custom-popup'
                                }
                            });
                        }
                    });
                }

                function ExcluirAgendamento() {
                    var userId = $('#ExcId').val();

                    // Show the overlay and loader
                    $("#overlay").show();
                    $("#loader").show();

                    $.ajax({
                        type: "POST",
                        url: "/Agendamento/ExcluirAgendamento",
                        dataType: "json",
                        data: { id: userId },
                        success: function (response) {
                            // Hide the overlay and loader after the response
                            $("#overlay").hide();
                            $("#loader").hide();

                            if (response.success) {
                                Swal.fire({
                                    position: "top-end",
                                    icon: 'success',
                                    title: 'Sucesso',
                                    text: 'Agendamento excluído com sucesso!',
                                    confirmButtonText: 'OK',
                                    width: '400px',
                                    padding: '20px',
                                    customClass: {
                                        popup: 'custom-popup'
                                    }
                                }).then(function () {
                                    $('#EditarAgendamento').modal('hide');
                                    location.reload();
                                });
                            } else {
                                Swal.fire({
                                    position: "top-end",
                                    icon: 'error',
                                    title: 'Erro',
                                    text: response.message,
                                    confirmButtonText: 'OK',
                                    width: '400px',
                                    padding: '20px',
                                    customClass: {
                                        popup: 'custom-popup'
                                    }
                                });
                            }
                        },
                        error: function () {
                            Swal.fire({
                                position: "top-end",
                                icon: 'error',
                                title: 'Erro',
                                text: 'Erro ao realizar a requisição.',
                                confirmButtonText: 'OK',
                                width: '400px',
                                padding: '20px',
                                customClass: {
                                    popup: 'custom-popup'
                                }
                            });
                        }
                    });
                }

        </script>
            <script>
                // Definindo a data mínima como a data atual usando JavaScript
                document.getElementById('data_a').setAttribute('min', new Date().toISOString().split('T')[0]);
            </script>
    </section>

</body>
